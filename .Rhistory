x
summary(x)
x["data"]
head(x['湖北',])
x['湖北', c(1:6, 9:11)]
a=x['湖北', c(1:6, 9:11)]
View(a)
x['湖北', c(1:6, 9:11)]
library(ggplot2)
require(ggrepel)
d <- x['湖北',]
ggplot(d,
aes(time, as.numeric(cum_confirm), group=city, color=city)) +
geom_point() + geom_line() +
geom_text_repel(aes(label=city), data=d[d$time == time(x), ], hjust=1) +
theme_minimal(base_size = 14) + theme(legend.position='none') +
xlab(NULL) + ylab(NULL)
ggplot(d,
aes(time, as.numeric(cum_confirm), group=city, color=city)) +
geom_point() + geom_line() +
geom_text_repel(aes(label=city), data=d[d$time == time(x), ], hjust=1) +
theme_minimal(base_size = 14) + theme(legend.position='none') +
xlab(NULL) + ylab(NULL)
install.packages("geom_text_repel")
a = x['湖北', c(1:6, 9:11)]
View(a)
a['武汉',]
a$city
which(a$city=='武汉')
a1 = a[which(a$city=='武汉'),]
View(a1)
a1 = a[which(a$city=='黄冈'),]
View(a1)
View(a)
View(a1)
x[,1]
unique( x[,1] )
provinceNames = unique( x[,1] )
a
cityNames = unique( a[,2] )
cityNames
a1
a1[,4]
a1[1,4]
a1[,3]
tail( a1[,3] )
tail( a1[,3], 1)
tail( a1[,3] ,1)
tail( a1[,3] ,1) - tail( a1[,3] ,2)
tail( a1[,3] ,1)  - date('2020-01-01')
tail( a1[,3] ,1)  - time('2020-01-01')
a2= tail( a1[,3] ,1)
tail( a1[,3] ,1)  - as.Date(('2020-01-01')
）
tail( a1[,3] ,1)  - as.Date('2020-01-01')
tail( a1[,3] ,1)  - as.Date('2020-01-01')+1
source('~/Documents/Wuhan2020/getDatanCov2019.R')
NameDays
View(NameDays)
x
provinceNames
debugSource('~/Documents/Wuhan2020/getDatanCov2019.R')
i
a = x[i, c(1:6, 9:11)]
a
i
for (j in cityNames) {
j
}
j
for (i in provinceNames) {
i
}
i
provinceNames = as.character( unique( x[,1] ) )
for (i in provinceNames) {
i
}
i
provinceNames =  unique( x[,1] )
for (ii in 1:length(provinceNames) ) {
i = provinceNames[ii];
}
i
ii
provinceNames
provinceNames[1]
provinceNames[[1]]
provinceNames[1,2]
provinceNames[2,1]
provinceNames =  unique( x[,1] )
provinceNames
provinceNames[,1]
provinceNames =  unique(x[,1])[,1]
source('~/Documents/Wuhan2020/getDatanCov2019.R')
i
source('~/Documents/Wuhan2020/getDatanCov2019.R')
i
provinceNames
View(NameDays)
provinceNames
debugSource('~/Documents/Wuhan2020/getDatanCov2019.R')
i
a = x[i, c(1:6, 9:11)]
a
x[i,]
a = x['湖北', c(1:6, 9:11)]
a
a = x['武汉', c(1:6, 9:11)]
a
provinceNames =  unique(x[,2])[,1]
provinceNames
View(x)
x[i, c(1:6, 9:11)]
i
x[,i, c(1:6, 9:11)]
x$city
x$city
which(x['city'==i]
)
i
which(x['city'==i] )
i
x['city'] )
x['city',] )
summary(x)
cityNames = unique(x[1]$city)
cityNames
x[1]$city
x[[1]]
x[[1]]$city
cityNames = unique( x[[1]]$city )
cityNames
x[[1]]
xa = x[[1]];
cityNames = unique( xa$city )
xa[ which(x['city'==i] ), c(1:6, 9:11)]
i
View(xa)
which(x['city'==i]
)
which(x['city',]==i)
x['city']
xa$city
xa[ which(xa$city==i ), c(1:6, 9:11)]
source('~/Documents/Wuhan2020/getDatanCov2019.R')
View(NumDays)
source('~/Documents/Wuhan2020/getDatanCov2019.R')
hist(NumDays)
source('~/Documents/Wuhan2020/getDatanCov2019.R')
source('~/Documents/Wuhan2020/getDatanCov2019.R')
source('~/Documents/Wuhan2020/getDatanCov2019.R')
View(a)
source('~/Documents/Wuhan2020/getDatanCov2019.R')
source('~/Documents/Wuhan2020/getDatanCov2019.R')
View(a)
a1
a1[1,4]
a1
a1[1,4]>=1
a1[1,4]
a1[1,4]>5
a1[1,4]>4
a1[1,4]>3
a1[1,4]>2
a1[1,4]>1
a1[1,4]>2
source('~/Documents/Wuhan2020/getDatanCov2019.R')
debugSource('~/Documents/Wuhan2020/getDatanCov2019.R')
a1
debugSource('~/Documents/Wuhan2020/getDatanCov2019.R')
a1
NumDay
NumDay
a1
a1[1,4]
a1[1,4]>=2
as.numeric(a1[1,4])
as.numeric(a1[1,4])>2
source('~/Documents/Wuhan2020/getDatanCov2019.R')
a1
a2 = as.numeric(a1[1,4]
)
a2 = as.numeric(a1[1,4])
a2
is.na(a2)
source('~/Documents/Wuhan2020/getDatanCov2019.R')
source('~/Documents/Wuhan2020/getDatanCov2019.R')
source('~/Documents/Wuhan2020/getDatanCov2019.R')
(~is.na(a2) )
a2
~is.na(a2)
!is.na(a2)
source('~/Documents/Wuhan2020/getDatanCov2019.R')
debugSource('~/Documents/Wuhan2020/getDatanCov2019.R')
a1
NumDays
NameDays
NameDays
NumDays
source('~/Documents/Wuhan2020/getDatanCov2019.R')
source('~/Documents/Wuhan2020/getDatanCov2019.R')
source('~/Documents/Wuhan2020/getDatanCov2019.R')
hist(NumFinal)
hist(NumFinal,10)
hist(NumFinal, breaks = 10)
View(NumFinal)
i
cityNames
View(xa)
provinceNames = unique( xa$province )
which(xa$city==i )
head( which(xa$city==i ), 1)
hist(NumDays)
temp
temp = head( which(xa$city==i ), 1)
temp
i
i=cityNames[1]
i
temp = head( which(xa$city==i ), 1)
xa$province[temp]==xa$city[temp]
for (i in cityNames ) {
temp = head( which(xa$city==i ), 1)
if(xa$province[temp]==xa$city[temp] ){
print(xa$city[temp])
}
}
a$province[temp]==xa$city[temp] & xa$city[temp]~="天津"
a$province[temp]==xa$city[temp] & xa$city[temp]!="天津"
a$province[temp]==xa$city[temp] && xa$city[temp]!="天津"
xa$city[temp]!="天津"
a$province[temp]==xa$city[temp] & xa$city[temp]!="天津"
a$province[temp]==xa$city[temp] and xa$city[temp]!="天津"
a$province[temp]==xa$city[temp] | xa$city[temp]!="天津"
a$province[temp]==xa$city[temp]
temp
xa$province[temp]==xa$city[temp] && xa$city[temp]~="天津"
xa$province[temp]==xa$city[temp] && xa$city[temp]!="天津"
source('~/Documents/Wuhan2020/getDatanCov2019.R')
source('~/Documents/Wuhan2020/getDatanCov2019.R')
source('~/Documents/Wuhan2020/getDatanCov2019.R')
source('~/Documents/Wuhan2020/getDatanCov2019.R')
NameDays
install.packages("adaptMCMC")
library(adaptMCMC)
niamey <- read.csv("http://kingaa.github.io/short-course/parest/niamey.csv")
ggplot(niamey,mapping=aes(x=biweek,y=measles,color=community))+
geom_line()+geom_point()
fit1 <- lm(log(measles)~biweek,data=subset(niamey,biweek<=8&community=="A"))
summary(fit1)
View(niamey)
library(EpiEstim)
install.packages("DescTools")
library(DescTools)
source('~/Documents/Case6/RatioEstimation.R')
BinomRatioCI(x1 = 36, n1 = 40, x2 = 16, n2 = 80, method = "katz")
BinomRatioCI(x1 = 36, n1 = 40, x2 = 16, n2 = 80, method = "koop")
BinomRatioCI(x1 = 6, n1 = 336, x2 = 43, n2 = 336, method = "katz")
6/43
BinomRatioCI(x1 = 6, n1 = 336, x2 = 43, n2 = 336, method = "katz")
BinomRatioCI(x1 = 6, n1 = 336, x2 = 43, n2 = 336, method = "Inv. hyperbolic sine")
BinomRatioCI(x1 = 6, n1 = 336, x2 = 43, n2 = 336, method = "sinh-1")
BinomRatioCI(x1 = 6, n1 = 336, x2 = 43, n2 = 336, method = "katz", conf.level = 0.95)
install.packages("igraph")
library(igraph)
g <- barabasi.game(1000) # increase this number to have a better estimate
d <- degree(g, mode="in")
fit1 <- fit_power_law(d+1, 10)
fit2 <- fit_power_law(d+1, 10, implementation="R.mle")
fit1$alpha
stats4::coef(fit2)
fit1$logLik
stats4::logLik(fit2)
g <- barabasi.game(1000) # increase this number to have a better estimate
d <- degree(g, mode="in")
d
fit1 <- fit_power_law(c(356,
92,
21,
8,
4,
0,
1))
fit1$alpha
stats4::coef(fit2)
fit1$logLik
stats4::logLik(fit2)
stats4::coef(fit2)
fit1$alpha
fit1$KS.stat
fit1$alpha
stats4::coef(fit2)
fit1 <- fit_power_law(c(356,
92,
21,
8,
4,
0,
1), implementation="R.mle")
fit1$alpha
stats4::coef(fit2)
fit1$logLik
stats4::logLik(fit2)
std(fit1)
var(fit1)
var(fit1$alpha)
fit1
fit1 <- fit_power_law(c(276,
78,
39,
18,
7,
5,
2,
0,
2,
1), implementation="R.mle")
fit1$alpha
stats4::coef(fit2)
fit1$logLik
stats4::logLik(fit2)
fit1 <- fit_power_law(c(276,
78,
39,
18,
7,
5,
2,
0,
2,
1), implementation="R.mle")
fit1 <- fit_power_law(c(276,
78,
39,
18,
7,
5,
2,
0,
2,
1))
fit1$alpha
stats4::coef(fit2)
fit1$logLik
stats4::logLik(fit2)
fit1 <- fit_power_law(c(356,
92,
21,
8,
4,
0,
1), implementation="R.mle")
fit1$alpha
# stats4::coef(fit2)
fit1$logLik
fit1 <- fit_power_law(c(356,
92,
21,
8,
4,
0,
1))
fit1$alpha
# stats4::coef(fit2)
fit1$logLik
# stats4::logLik(fit2)
fit1$continuous
fit1$KS.p
fit1 <- fit_power_law(c(1, 2, 4, 8, 16))
fit1$alpha
stats4::coef(fit2)
fit1$logLik
stats4::logLik(fit2)
2^2.460183
3^2.460183
2^1.583102
3^1.583102
5^1.583102
fit1 <- fit_power_law(c(1, 2^3, 3^3))
fit1$alpha
stats4::coef(fit2)
fit1$logLik
stats4::logLik(fit2)
fit1 <- fit_power_law(c(1, 2^3, 3^3, 4^3))
fit1$alpha
stats4::coef(fit2)
fit1 <- fit_power_law(c(276,
78,
39,
18,
7,
5,
2,
0,
2,
1))
fit1$alpha
fit1$continuous
fit1$xmin
fit1$KS.stat
fit1$alpha
stats4::coef(fit2)
x=1
stats4::coef(fit2)*x^fit1$alpha
fit1 <- fit_power_law(c(356,
92,
21,
8,
4,
0,
1))
fit1$alpha
# stats4::coef(fit2)
fit1$logLik
# stats4::logLik(fit2)
fit1 <- fit_power_law(c(276,
78,
39,
18,
7,
5,
2,
0,
2,
1))
fit1$alpha
stats4::coef(fit2)
x=1
stats4::coef(fit2)*x^fit1$alpha
x=c(1:10)
stats4::coef(fit2)*x^fit1$alpha
x=c(1:10)
stats4::coef(fit1)*x^fit1$alpha
stats4::coef(fit1)
fit1$alpha
stats4::coef(fit1)
fit1 <- fit_power_law(c(276,
78,
39,
18,
7,
5,
2,
0,
2,
1))
fit1$alpha
stats4::coef(fit1)
fit1$alpha
x=c(1:10)
x^fit1$alpha
data("dict_cbsa")
install.packages("totalcensus")
data("dict_cbsa")
library(totalcensus)
data("dict_cbsa")
force(dict_cbsa)
View(dict_cbsa)
source('~/Documents/Case6_pediatric/RatioEstimation.R', echo=TRUE)
p=floor(pp/10)
p
debugSource('~/Documents/GitHub/sir/buildR.R', echo=TRUE)
pp
pp/100
pp/1000
p=floor(pp/1000)
p
sum(p)
p=floor(pp/1000)
x=sample.households(p,hh2[hh2$URBAN==1,][,-(1:2)],N=1000)
gr=lapply(1:5,function(i) {  (1:p[i])+c(0,cumsum(p))[i] }  )
W = make.household.net(gr, x)
file = "pholme_sir/AustinSmall10Net10.csv"
x=write.net( p,a,file=file,append=F,get.degree=function(rate){ rpois(length(rate),rate*10)})
m = as.matrix( cbind( W, 0, 0, 3))  # 0 says don't specify group id
write.table( file=file, m,append=T,col.names =F,row.names = F)
View(x)
p=floor(pp/1000)
x=sample.households(p,hh2[hh2$URBAN==1,][,-(1:2)],N=1000)
gr=lapply(1:5,function(i) {  (1:p[i])+c(0,cumsum(p))[i] }  )
W = make.household.net(gr, x)
file = "pholme_sir/AustinSmall10Net10.csv"
x=write.net( p,a,file=file,append=F,get.degree=function(rate){ rpois(length(rate),rate*10)})
m = as.matrix( cbind( W, 0, 0, 3))  # 0 says don't specify group id
write.table( file=file, m,append=T,col.names =F,row.names = F)
View(hh2)
View(x)
View(hh2)
debugSource('~/Documents/GitHub/sir/buildR.R', echo=TRUE)
hhh2
head(hhh2)
r
head(r)
ir
head(hhh2)
View(r)
head(r)
i
x=sample.households(p,hh2[hh2$URBAN==1,][,-(1:2)],N=1000)
x
gr=lapply(1:5,function(i) {  (1:p[i])+c(0,cumsum(p))[i] }  )
W = make.household.net(gr, x)
head(W)
gr
W
p
a
file = "pholme_sir/AustinSmall10Net10.csv"
x=write.net( p,a,file=file,append=F,get.degree=function(rate){ rpois(length(rate),rate*10)})
head(x)
a
